<h2>
  Answer 1
</h2>

<p>
  Windows will not let the user or your program undo file delete operations
  that your perform using low-level functions such as <var>DeleteFile()</var>
  from your program. Following function, however, will delete a file with the
  ability to undo (recycle) by sending the file to the &quot;Recycle
  Bin.&quot;
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">uses</span> ShellAPI;

<span class="pas-kwd">function</span> DeleteFileWithUndo(sFileName: <span class="pas-kwd">string</span>): boolean;
<span class="pas-kwd">var</span>
  fos: TSHFileOpStruct;
<span class="pas-kwd">begin</span>
  FillChar(fos, SizeOf(fos), <span class="pas-num">0</span>);
  <span class="pas-kwd">with</span> fos <span class="pas-kwd">do</span>
  <span class="pas-kwd">begin</span>
    wFunc  := FO_DELETE;
    pFrom  := PChar( sFileName );
    fFlags := FOF_ALLOWUNDO <span class="pas-kwd">or</span> FOF_NOCONFIRMATION <span class="pas-kwd">or</span> FOF_SILENT;
  <span class="pas-kwd">end</span>;
  Result := (<span class="pas-num">0</span> = ShFileOperation(fos));
<span class="pas-kwd">end</span>;</pre>
</div>

<p>
  To delete a file, simply pass the file name to
  <var>DeleteFileWithUndo()</var> and it will return True if the operation was
  successful.
</p>

<div class="xref">
  There is a version of <?php
  echo DocPart::OffsiteTextLink(
    URL_SNIPPETSLIST . '?snippets=DeleteFileWithUndo', 'DeleteFileWithUndo'
  );
  ?>
  in the <?php
  echo DocPart::OffsiteTextLink(URL_SNIPPETS, 'Code Snippets Database');
  ?>.
</div>

<h2>
  Answer 2
</h2>

<p>
  Here's a unit that provides some extended functionality:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">unit</span><span class="pas-space"> </span><span class="pas-ident">Recycle</span><span class="pas-sym">;</span>

<span class="pas-kwd">interface</span>

<span class="pas-kwd">uses</span>
<span class="pas-space">  </span><span class="pas-ident">Windows</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Messages</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">SysUtils</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Classes</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Controls</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Forms</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Dialogs</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-ident">ShellAPI</span><span class="pas-sym">;</span>

<span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">RecycleFile</span><span class="pas-sym">(</span><span class="pas-ident">FileToRecycle</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TFilename</span><span class="pas-sym">)</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">;</span>
<span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">RecycleFileEx</span><span class="pas-sym">(</span><span class="pas-ident">FileToRecycle</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TFilename</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-ident">Confirm</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">)</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">;</span>

<span class="pas-kwd">implementation</span>

<span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">RecycleFile</span><span class="pas-sym">(</span><span class="pas-ident">FileToRecycle</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TFilename</span><span class="pas-sym">)</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">Result</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">RecycleFileEx</span><span class="pas-sym">(</span><span class="pas-ident">FileToRecycle</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">True</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">RecycleFileEx</span><span class="pas-sym">(</span><span class="pas-ident">FileToRecycle</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TFilename</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-ident">Confirm</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">)</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TSHFileOpStruct</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">tmp</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Resultval</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">tmp</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">FileToRecycle</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-str">#0</span><span class="pas-str">#0</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">wnd</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">wFunc</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">FO_DELETE</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">pFrom</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">PChar</span><span class="pas-sym">(</span><span class="pas-ident">tmp</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">pTo</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-kwd">nil</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">fFlags</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">FOF_ALLOWUNDO</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-kwd">not</span><span class="pas-space"> </span><span class="pas-ident">Confirm</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">fFlags</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">fFlags</span><span class="pas-space"> </span><span class="pas-kwd">or</span><span class="pas-space"> </span><span class="pas-ident">FOF_NOCONFIRMATION</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">fAnyOperationsAborted</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">false</span>
<span class="pas-space">  </span><span class="pas-ident">Struct</span><span class="pas-sym">.</span><span class="pas-ident">hNameMappings</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-kwd">nil</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">try</span>
<span class="pas-space">      </span><span class="pas-ident">Resultval</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">ShFileOperation</span><span class="pas-sym">(</span><span class="pas-ident">Struct</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">except</span>
<span class="pas-space">      </span><span class="pas-kwd">on</span><span class="pas-space"> </span><span class="pas-ident">e</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Exception</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">      </span><span class="pas-kwd">begin</span>
<span class="pas-space">        </span><span class="pas-ident">e</span><span class="pas-sym">.</span><span class="pas-kwd">Message</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">'Tried to recycle file:'</span><span class="pas-space"> </span><span class="pas-sym">+</span>
<span class="pas-space">          </span><span class="pas-ident">FileToRecycle</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-str">#13</span><span class="pas-str">#10</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">e</span><span class="pas-sym">.</span><span class="pas-kwd">Message</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-kwd">raise</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">   </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">   </span><span class="pas-ident">Result</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">Resultval</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">end</span><span class="pas-sym">.</span></pre>
</div>