<p>
  There are several ways of executing files and applications from Delphi. All
  use the <var>ShellAPI</var> unit and either the <var>ShellExecute</var> or
  <var>ShellExecuteEx</var> API functions.
</p>

<h2>
  Example 1
</h2>

<p>
  Execute NotePad:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-ident">ShellExecute</span><span class="pas-sym">(</span>
<span class="pas-space">  </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'open'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'c:\Windows\notepad.exe'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-ident">SW_SHOWNORMAL</span>
<span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>

<h2>
  Example 2
</h2>

<p>
  Open <code>SomeText.txt</code> in NotePad:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-ident">ShellExecute</span><span class="pas-sym">(</span>
<span class="pas-space">  </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'open'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'c:\windows\notepad.exe'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'c:\SomeText.txt'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-ident">SW_SHOWNORMAL</span>
<span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>

<h2>
  Example 3
</h2>

<p>
  Execute a file according to its extension:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-ident">ShellExecute</span><span class="pas-sym">(</span>
<span class="pas-space">  </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'open'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'c:\MyDocuments\Letter.doc'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-ident">SW_SHOWNORMAL</span>
<span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>

<h2>
  Example 4
</h2>

<p>
  Open web site or a <code>*.htm</code> file with the default web browser.
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-ident">ShellExecute</span><span class="pas-sym">(</span>
<span class="pas-space">  </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'open'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-str">'http://example.com'</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-ident">SW_SHOWNORMAL</span>
<span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>

<h2>
  Example 5
</h2>

<p>
  Send an e-mail with a subject and a message body:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">var</span><span class="pas-space"> </span><span class="pas-ident">em_subject</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">em_body</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">em_mail</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>

<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">em_subject</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">'This is the subject line'</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">em_body</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">'Message body text goes here'</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">em_mail</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">'mailto:delphi.guide@about.com?subject='</span><span class="pas-space"> </span><span class="pas-sym">+</span>
<span class="pas-space">    </span><span class="pas-ident">em_subject</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-str">'&amp;body='</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">em_body</span><span class="pas-space"> </span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">ShellExecute</span><span class="pas-sym">(</span>
<span class="pas-space">    </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-str">'open'</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">PChar</span><span class="pas-sym">(</span><span class="pas-ident">em_mail</span><span class="pas-sym">)</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">SW_SHOWNORMAL</span>
<span class="pas-space">  </span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span></pre>
</div>

<h2>
  Example 6
</h2>

<p>
  Execute the Windows Calculator and pop up a message when Calc is terminated.
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">uses</span><span class="pas-space"> </span><span class="pas-ident">ShellApi</span><span class="pas-sym">;</span>

<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">SEInfo</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TShellExecuteInfo</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">ExitCode</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">DWORD</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">ExecuteFile</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">ParamString</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">StartInString</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">ExecuteFile</span><span class="pas-sym">:=</span><span class="pas-str">'c:\Windows\Calc.exe'</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FillChar</span><span class="pas-sym">(</span><span class="pas-ident">SEInfo</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">SizeOf</span><span class="pas-sym">(</span><span class="pas-ident">SEInfo</span><span class="pas-sym">)</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">SEInfo</span><span class="pas-sym">.</span><span class="pas-ident">cbSize</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SizeOf</span><span class="pas-sym">(</span><span class="pas-ident">TShellExecuteInfo</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">with</span><span class="pas-space"> </span><span class="pas-ident">SEInfo</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">fMask</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SEE_MASK_NOCLOSEPROCESS</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Wnd</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Handle</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">lpFile</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">PChar</span><span class="pas-sym">(</span><span class="pas-ident">ExecuteFile</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-comment">//lpParameters := PChar(ParamString);</span>
<span class="pas-space">      </span><span class="pas-comment">{ParamString can contain the application parameters.}</span>
<span class="pas-space">    </span><span class="pas-comment">//lpDirectory := PChar(StartInString);</span>
<span class="pas-space">      </span><span class="pas-comment">{StartInString specifies the name of the working directory.</span>
<span class="pas-comment">      If ommited, the current directory is used.}</span>
<span class="pas-space">    </span><span class="pas-ident">nShow</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SW_SHOWNORMAL</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">ShellExecuteEx</span><span class="pas-sym">(</span><span class="pas-sym">@</span><span class="pas-ident">SEInfo</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-kwd">repeat</span>
<span class="pas-space">      </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">ProcessMessages</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">GetExitCodeProcess</span><span class="pas-sym">(</span><span class="pas-ident">SEInfo</span><span class="pas-sym">.</span><span class="pas-ident">hProcess</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">ExitCode</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">until</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">ExitCode</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-ident">STILL_ACTIVE</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">or</span><span class="pas-space"> </span><span class="pas-ident">Application</span><span class="pas-sym">.</span><span class="pas-ident">Terminated</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">ShowMessage</span><span class="pas-sym">(</span><span class="pas-str">'Calculator terminated'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span>
<span class="pas-space">  </span><span class="pas-kwd">else</span>
<span class="pas-space">    </span><span class="pas-ident">ShowMessage</span><span class="pas-sym">(</span><span class="pas-str">'Error starting Calc!'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span></pre>
</div>

