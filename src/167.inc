<div class="question">
    <div class="title">
        Question
    </div>
    <div class="content">
        Is there a way to point a pointer to a text data file on a hard drive
        without reading into memory. Here is the problem. I have a third-party
        DLL that requires a pointer to a large char string 10000 + chars. If I
        were to read into memory and then call the DLL it could cause problems.
    </div>
</div>

<p>
    You can use Mapped Files. A mapped file is a region in memory that is mapped
    to a file on disk. After you map a file to memory you get a pointer to the
    memory region and use it like any other pointer - Windows will load and
    unload pages from the file to memory as needed. Here is a very simple
    implementation of a mapped file. It is used only to read data from the file
    so you might want to change it to also allow writing. After you create an
    instance, the <var>Content</var> property is a pointer to the file content.
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-comment">{ ... }</span>
<span class="pas-kwd">type</span>
<span class="pas-space">  </span><span class="pas-ident">TMappedFile</span><span class="pas-sym">=</span><span class="pas-kwd">class</span>
<span class="pas-space">  </span><span class="pas-kwd">private</span>
<span class="pas-space">    </span><span class="pas-ident">FMapping</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">THandle</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">FContent</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">PChar</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">FSize</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Integer</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">MapFile</span><span class="pas-sym">(</span><span class="pas-kwd">const</span><span class="pas-space"> </span><span class="pas-ident">FileName</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">public</span>
<span class="pas-space">    </span><span class="pas-kwd">constructor</span><span class="pas-space"> </span><span class="pas-ident">Create</span><span class="pas-sym">(</span><span class="pas-kwd">const</span><span class="pas-space"> </span><span class="pas-ident">FileName</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">destructor</span><span class="pas-space"> </span><span class="pas-ident">Destroy</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-kwd">override</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">property</span><span class="pas-space"> </span><span class="pas-ident">Content</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">PChar</span><span class="pas-space"> </span><span class="pas-kwd">read</span><span class="pas-space"> </span><span class="pas-ident">FContent</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">property</span><span class="pas-space"> </span><span class="pas-ident">Size</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Integer</span><span class="pas-space"> </span><span class="pas-kwd">read</span><span class="pas-space"> </span><span class="pas-ident">FSize</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">implementation</span>

<span class="pas-kwd">uses</span>
<span class="pas-space">  </span><span class="pas-ident">sysutils</span><span class="pas-sym">;</span>

<span class="pas-comment">{ TMappedFile }</span>

<span class="pas-kwd">constructor</span><span class="pas-space"> </span><span class="pas-ident">TMappedFile</span><span class="pas-sym">.</span><span class="pas-ident">Create</span><span class="pas-sym">(</span><span class="pas-kwd">const</span><span class="pas-space"> </span><span class="pas-ident">FileName</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-kwd">inherited</span><span class="pas-space"> </span><span class="pas-ident">Create</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">MapFile</span><span class="pas-sym">(</span><span class="pas-ident">FileName</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">destructor</span><span class="pas-space"> </span><span class="pas-ident">TMappedFile</span><span class="pas-sym">.</span><span class="pas-ident">Destroy</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">UnmapViewOfFile</span><span class="pas-sym">(</span><span class="pas-ident">FContent</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">CloseHandle</span><span class="pas-sym">(</span><span class="pas-ident">FMapping</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">inherited</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TMappedFile</span><span class="pas-sym">.</span><span class="pas-ident">MapFile</span><span class="pas-sym">(</span><span class="pas-kwd">const</span><span class="pas-space"> </span><span class="pas-ident">FileName</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">FileHandle</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">THandle</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">FileHandle</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">FileOpen</span><span class="pas-sym">(</span><span class="pas-ident">FileName</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">fmOpenRead</span><span class="pas-space"> </span><span class="pas-kwd">or</span><span class="pas-space"> </span><span class="pas-ident">fmShareDenyWrite</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Win32Check</span><span class="pas-sym">(</span><span class="pas-ident">FileHandle</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">try</span>
<span class="pas-space">    </span><span class="pas-ident">FSize</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">GetFileSize</span><span class="pas-sym">(</span><span class="pas-ident">FileHandle</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-kwd">nil</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">FMapping</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">CreateFileMapping</span><span class="pas-sym">(</span><span class="pas-ident">FileHandle</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-kwd">nil</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">PAGE_READONLY</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-kwd">nil</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Win32Check</span><span class="pas-sym">(</span><span class="pas-ident">FMapping</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">finally</span>
<span class="pas-space">    </span><span class="pas-ident">FileClose</span><span class="pas-sym">(</span><span class="pas-ident">FileHandle</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FContent</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">MapViewOfFile</span><span class="pas-sym">(</span><span class="pas-ident">FMapping</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">FILE_MAP_READ</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Win32Check</span><span class="pas-sym">(</span><span class="pas-ident">FContent</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-kwd">nil</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span></pre>
</div>