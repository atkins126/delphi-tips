<p>
  <var>TStringList</var> has a <var>Sort</var> method and a <var>Sorted</var>
  property. This feature is not available in <var>TStrings</var>.
</p>

<p>
  This class allows sorting of <var>TString</var> objects with extra
  functionality ala UNIX style parameters. (Yes I know UNIX is a four letter
  word but they do have some neat features). The SORT algorythm utilizes the
  QUICK SORT method. The features I have implemented are
</p>

<p>
  <strong>Options:</strong>
</p>

<ul>
  <li>
    Sort descending &ndash; <var>srtDescending</var>
  </li>
  <li>
    Treat sort field as numeric &ndash; <var>srtEvalNumeric</var>
  </li>
  <li>
    Ignore leading blanks in field &ndash; <var>srtIgnoreBlank</var>
  </li>
  <li>
    Ignore case of field &ndash; <var>srtIgnoreCase</var>
  </li>
</ul>

<p>
  <strong>Switches:</strong>
</p>

<ul>
  <li>
    <code>-k</code> &ndash; Start,End position of substring for search
  </li>
  <li>
    <code>-f</code> &ndash; Field number of a delimited string (Zero column
    based)
  </li>
  <li>
    <code>-d</code> &ndash; Character delimiter for -f switch (Default =
    SPACE)
  </li>
</ul>

<p>
  In it's simplest form the class just sorts the <var>TStrings</var> ascending
  e.g.
</p>

<div class="indent">
<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-ident">SuperSort</span><span class="pas-sym">.</span><span class="pas-ident">SortStrings</span><span class="pas-sym">(</span><span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">,</span><span class="pas-sym">[</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>
</div>

<p>
  Assume a semi-colon delimited list like:
</p>

<pre class="indent">
'Mike;34;Green'
'harry;25;Red'
'Jackie;6;Black'
'Bazil;9,Pink'
'john;52;Blue'
</pre>

<p>
  To sort this list DESCENDING on AGE (Field 1) and ignore case:
</p>

<div class="indent">
<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-ident">SuperSort</span><span class="pas-sym">(</span><span class="pas-ident">MyStrings</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-sym">[</span><span class="pas-str">'-f 1'</span><span class="pas-sym">,</span><span class="pas-str">'-d ;'</span><span class="pas-sym">]</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-sym">[</span><span class="pas-ident">srtDescending</span><span class="pas-sym">,</span><span class="pas-ident">srtEvalNumeric</span><span class="pas-sym">,</span><span class="pas-ident">srtIgnoreCase</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>
</div>

<p>
  Assume a string list of:
</p>

<pre class="indent">
'1999 12 20 AA432 Comment 1'
'2002 10 12 SWA12 Some other words'
'1998 09 11 BDS65 And so on and so on'
</pre>

<p>
  To sort this list on ITEM CODE (Positions 12 to 17) with no options
</p>

<div class="indent">
<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-ident">SuperSort</span><span class="pas-sym">(</span><span class="pas-ident">MyStrings</span><span class="pas-sym">,</span><span class="pas-sym">[</span><span class="pas-str">'-k 12,17'</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>
</div>

<p>
  <strong>Methods:</strong>
</p>

<div class="indent">

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">SortStrings</span><span class="pas-sym">(</span><span class="pas-ident">StringList</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-ident">Switches</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">array</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Options</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TSuperSortOptionSet</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-sym">[</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span></pre>
</div>

<p>
  Switches is a string array of -k,-d and -f settings. If it is set to empty
  array [] then NO switches are active. Options is an OPTIONAL set of
  [srtDescending,srtIgnoreCase,srtIgnoreBlank,srtEvalNumeric] The default is
  empty set [].
</p>

</div>

<p>
  <strong>Properties:</strong>
</p>

<div class="indent">

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-ident">SortTime</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TDateTime</span><span class="pas-sym">;</span></pre>
</div>

<p>
  Returns the time taken for the sort for stats purposes.
</p>

</div>

<p>
  <strong>Usage Example:</strong>
</p>

<div class="indent">
<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-kwd">uses</span>
<span class="pas-space">  </span><span class="pas-ident">SuperSort</span><span class="pas-sym">;</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">Test</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span><span class="pas-space"> </span>
<span class="pas-space">  </span><span class="pas-ident">Srt</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">Srt</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">.</span><span class="pas-ident">Create</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Srt</span><span class="pas-sym">.</span><span class="pas-ident">SortStrings</span><span class="pas-sym">(</span><span class="pas-ident">Memo1</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">,</span><span class="pas-sym">[</span><span class="pas-sym">]</span><span class="pas-sym">,</span><span class="pas-sym">[</span><span class="pas-ident">srtIgnoreBlank</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Label1</span><span class="pas-sym">.</span><span class="pas-ident">Caption</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">'Time : '</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">FormatDateTine</span><span class="pas-sym">(</span><span class="pas-str">'hh:nn:ss:zzz'</span><span class="pas-sym">,</span><span class="pas-ident">Srt</span><span class="pas-sym">.</span><span class="pas-ident">SortTime</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Srt</span><span class="pas-sym">.</span><span class="pas-ident">Free</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span></pre>
</div>
</div>

<h3>
  The unit.
</h3>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasHi -->
<pre class="pas-source"><span class="pas-kwd">unit</span><span class="pas-space"> </span><span class="pas-ident">SuperSort</span><span class="pas-sym">;</span>

<span class="pas-kwd">interface</span>

<span class="pas-kwd">uses</span><span class="pas-space"> </span>
<span class="pas-space">  </span><span class="pas-ident">Classes</span><span class="pas-sym">,</span><span class="pas-ident">SysUtils</span><span class="pas-sym">;</span>

<span class="pas-comment">// ==========================================================================</span>
<span class="pas-comment">// Class TSuperSort</span>
<span class="pas-comment">// Mike Heydon Nov 2002</span>
<span class="pas-comment">//</span>
<span class="pas-comment">// Sort class that implements Unix style sorts including ..</span>
<span class="pas-comment">//</span>
<span class="pas-comment">// SWITCHES</span>
<span class="pas-comment">// --------</span>
<span class="pas-comment">// -k [StartPos,EndPos]  - Keyfield to sort on. Start and End pos in string</span>
<span class="pas-comment">// -d [Field Delimiter]  - Delimter to use with -f switch. default = SPACE</span>
<span class="pas-comment">// -f [FieldNumber]      - Zero based field number delimeted by -d</span>
<span class="pas-comment">//</span>
<span class="pas-comment">// OPTIONS SET</span>
<span class="pas-comment">// ============</span>
<span class="pas-comment">// srtDescending         - Sort descending</span>
<span class="pas-comment">// srtIgnoreCase         - Ignore case when sorting</span>
<span class="pas-comment">// srtIgnoreBlank        - Ignore leading blanks</span>
<span class="pas-comment">// srtEvalNumeric        - Treat sort items as NUMERIC</span>
<span class="pas-comment">//</span>
<span class="pas-comment">// ==========================================================================</span>

<span class="pas-kwd">type</span>
<span class="pas-space">  </span><span class="pas-comment">// Sort Options</span>
<span class="pas-space">  </span><span class="pas-ident">TSuperSortOptions</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-sym">(</span>
<span class="pas-space">    </span><span class="pas-ident">srtDescending</span><span class="pas-sym">,</span><span class="pas-ident">srtIgnoreCase</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">srtIgnoreBlank</span><span class="pas-sym">,</span><span class="pas-ident">srtEvalNumeric</span>
<span class="pas-space">  </span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">TSuperSortOptionSet</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-kwd">set</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-ident">TSuperSortOptions</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-comment">// ============</span>
<span class="pas-space">  </span><span class="pas-comment">// TSuperSort</span>
<span class="pas-space">  </span><span class="pas-comment">// ============</span>
<span class="pas-space">  </span><span class="pas-ident">TSuperSort</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-kwd">class</span><span class="pas-sym">(</span><span class="pas-ident">TObject</span><span class="pas-sym">)</span>
<span class="pas-space">  </span><span class="pas-kwd">protected</span>
<span class="pas-space">    </span><span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-kwd">const</span><span class="pas-space"> </span><span class="pas-ident">Line</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">QuickSortStrA</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">QuickSortStrD</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">ResolveSwitches</span><span class="pas-sym">(</span><span class="pas-ident">Switches</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">array</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">private</span>
<span class="pas-space">    </span><span class="pas-ident">FSortTime</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TDateTime</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">FIsSwitches</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FIsPositional</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FIsDelimited</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FDescending</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FIgnoreCase</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FIgnoreBlank</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FEvalDateTime</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FEvalNumeric</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">boolean</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">FFieldNum</span><span class="pas-sym">,</span>
<span class="pas-space">    </span><span class="pas-ident">FStartPos</span><span class="pas-sym">,</span><span class="pas-ident">FEndPos</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">FDelimiter</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">char</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">public</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">SortStrings</span><span class="pas-sym">(</span><span class="pas-ident">StringList</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-ident">Switches</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">array</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">Options</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TSuperSortOptionSet</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-sym">[</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">property</span><span class="pas-space"> </span><span class="pas-ident">SortTime</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TDateTime</span><span class="pas-space"> </span><span class="pas-kwd">read</span><span class="pas-space"> </span><span class="pas-ident">FSortTime</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-comment">// --------------------------------------------------------------------------</span>
<span class="pas-kwd">implementation</span>

<span class="pas-kwd">const</span>
<span class="pas-space">  </span><span class="pas-ident">BLANK</span><span class="pas-space">    </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-num">1</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">EMPTYSTR</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-str">''</span><span class="pas-sym">;</span>

<span class="pas-comment">// ================================================</span>
<span class="pas-comment">// INTERNAL CALL</span>
<span class="pas-comment">// Resolve switches and set internal variables</span>
<span class="pas-comment">// ================================================</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">.</span><span class="pas-ident">ResolveSwitches</span><span class="pas-sym">(</span><span class="pas-ident">Switches</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">array</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Sw</span><span class="pas-sym">,</span><span class="pas-ident">Data</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">FStartPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">BLANK</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FEndPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">BLANK</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FFieldNum</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">BLANK</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FDelimiter</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">' '</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FIsPositional</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">false</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FIsDelimited</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">false</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-kwd">for</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Low</span><span class="pas-sym">(</span><span class="pas-ident">Switches</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">to</span><span class="pas-space"> </span><span class="pas-ident">High</span><span class="pas-sym">(</span><span class="pas-ident">Switches</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">Sw</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">trim</span><span class="pas-sym">(</span><span class="pas-ident">Switches</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Data</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">trim</span><span class="pas-sym">(</span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Sw</span><span class="pas-sym">,</span><span class="pas-num">3</span><span class="pas-sym">,</span><span class="pas-num">1024</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Sw</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">UpperCase</span><span class="pas-sym">(</span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Sw</span><span class="pas-sym">,</span><span class="pas-num">1</span><span class="pas-sym">,</span><span class="pas-num">2</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-comment">// Delimiter</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">Sw</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-str">'-D'</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-kwd">begin</span>
<span class="pas-space">      </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">length</span><span class="pas-sym">(</span><span class="pas-ident">Data</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span><span class="pas-ident">FDelimiter</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Data</span><span class="pas-sym">[</span><span class="pas-num">1</span><span class="pas-sym">]</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-comment">// Field Number</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">Sw</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-str">'-F'</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-kwd">begin</span>
<span class="pas-space">      </span><span class="pas-ident">FIsSwitches</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">true</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">FIsDelimited</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">true</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">FFieldNum</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">StrToIntDef</span><span class="pas-sym">(</span><span class="pas-ident">Data</span><span class="pas-sym">,</span><span class="pas-ident">BLANK</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">Assert</span><span class="pas-sym">(</span><span class="pas-ident">FFieldNum</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-ident">BLANK</span><span class="pas-sym">,</span><span class="pas-str">'Invalid -f Switch'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-comment">// Positional Key</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">Sw</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-str">'-K'</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-kwd">begin</span>
<span class="pas-space">      </span><span class="pas-ident">FIsSwitches</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">true</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">FIsPositional</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">true</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">FStartPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">StrToIntDef</span><span class="pas-sym">(</span><span class="pas-ident">trim</span><span class="pas-sym">(</span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Data</span><span class="pas-sym">,</span><span class="pas-num">1</span><span class="pas-sym">,</span><span class="pas-ident">pos</span><span class="pas-sym">(</span><span class="pas-str">','</span><span class="pas-sym">,</span><span class="pas-ident">Data</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-sym">,</span><span class="pas-ident">BLANK</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">FEndPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">StrToIntDef</span><span class="pas-sym">(</span><span class="pas-ident">trim</span><span class="pas-sym">(</span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Data</span><span class="pas-sym">,</span><span class="pas-ident">pos</span><span class="pas-sym">(</span><span class="pas-str">','</span><span class="pas-sym">,</span><span class="pas-ident">Data</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">,</span><span class="pas-num">1024</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-sym">,</span><span class="pas-ident">BLANK</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">Assert</span><span class="pas-sym">(</span><span class="pas-sym">(</span><span class="pas-ident">FStartPos</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-ident">BLANK</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">and</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">FEndPos</span><span class="pas-space"> </span><span class="pas-sym">&lt;&gt;</span><span class="pas-space"> </span><span class="pas-ident">Blank</span><span class="pas-sym">)</span><span class="pas-sym">,</span><span class="pas-str">'Invalid -k Switch'</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-comment">// ====================================================</span>
<span class="pas-comment">// INTERNAL CALL</span>
<span class="pas-comment">// Resolve the Sort Key part of the string based on</span>
<span class="pas-comment">// the Switches parameters</span>
<span class="pas-comment">// ====================================================</span>

<span class="pas-kwd">function</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">.</span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-kwd">const</span><span class="pas-space"> </span><span class="pas-ident">Line</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Numvar</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">double</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">DCount</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Tmp</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-comment">// Default</span>
<span class="pas-space">  </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Line</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-comment">// Extract Key from switches -k takes precedence</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FIsPositional</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">,</span><span class="pas-ident">FStartPos</span><span class="pas-sym">,</span><span class="pas-ident">FEndPos</span><span class="pas-sym">)</span>
<span class="pas-space">  </span><span class="pas-kwd">else</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FIsDelimited</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-kwd">begin</span>
<span class="pas-space">      </span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">DCount</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">for</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-space"> </span><span class="pas-kwd">to</span><span class="pas-space"> </span><span class="pas-ident">length</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">      </span><span class="pas-kwd">begin</span>
<span class="pas-space">        </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">Key</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-ident">FDelimiter</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">         </span><span class="pas-ident">inc</span><span class="pas-sym">(</span><span class="pas-ident">DCount</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">DCount</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-ident">FFieldNum</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">        </span><span class="pas-kwd">begin</span>
<span class="pas-space">           </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FFieldNum</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">             </span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">1</span>
<span class="pas-space">           </span><span class="pas-kwd">else</span>
<span class="pas-space">             </span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">;</span>
<span class="pas-space">          </span><span class="pas-ident">break</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-space">      </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">DCount</span><span class="pas-space"> </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">FFieldNum</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">        </span><span class="pas-comment">// No such Field Number</span>
<span class="pas-space">        </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">EMPTYSTR</span>
<span class="pas-space">      </span><span class="pas-kwd">else</span>
<span class="pas-space">      </span><span class="pas-kwd">begin</span>
<span class="pas-space">        </span><span class="pas-ident">Tmp</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">,</span><span class="pas-ident">DPos</span><span class="pas-sym">,</span><span class="pas-num">4096</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">pos</span><span class="pas-sym">(</span><span class="pas-ident">FDelimiter</span><span class="pas-sym">,</span><span class="pas-ident">Tmp</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">          </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Tmp</span>
<span class="pas-space">        </span><span class="pas-kwd">else</span>
<span class="pas-space">          </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">copy</span><span class="pas-sym">(</span><span class="pas-ident">Tmp</span><span class="pas-sym">,</span><span class="pas-num">1</span><span class="pas-sym">,</span><span class="pas-ident">DPos</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">       </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-comment">// Resolve Options</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FEvalNumeric</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">trim</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-comment">// Strip any commas</span>
<span class="pas-space">    </span><span class="pas-kwd">for</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">length</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">downto</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">      </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">Key</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-str">','</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span><span class="pas-ident">delete</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">,</span><span class="pas-ident">i</span><span class="pas-sym">,</span><span class="pas-num">1</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">try</span>
<span class="pas-space">      </span><span class="pas-ident">Numvar</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">StrToFloat</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">except</span>
<span class="pas-space">      </span><span class="pas-ident">Numvar</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-float">0.0</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">FormatFloat</span><span class="pas-sym">(</span><span class="pas-str">'############0.000000'</span><span class="pas-sym">,</span><span class="pas-ident">Numvar</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-comment">// Leftpad num string</span>
<span class="pas-space">    </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">StringOfChar</span><span class="pas-sym">(</span><span class="pas-str">'0'</span><span class="pas-sym">,</span><span class="pas-num">20</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-space"> </span><span class="pas-ident">length</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">Key</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-comment">// Ignores N/A for Numeric and DateTime</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-kwd">not</span><span class="pas-space"> </span><span class="pas-ident">FEvalNumeric</span><span class="pas-space"> </span><span class="pas-kwd">and</span><span class="pas-space"> </span><span class="pas-kwd">not</span><span class="pas-space"> </span><span class="pas-ident">FEvalDateTime</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FIgnoreBlank</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">trim</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FIgnoreCase</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span><span class="pas-ident">Key</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">UpperCase</span><span class="pas-sym">(</span><span class="pas-ident">Key</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-ident">Result</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Key</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-comment">// ==============================================</span>
<span class="pas-comment">// INTERNAL CALL</span>
<span class="pas-comment">// Recursive STRING quick sort routine ASCENDING.</span>
<span class="pas-comment">// ==============================================</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">.</span><span class="pas-ident">QuickSortStrA</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">)</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-ident">l</span><span class="pas-sym">,</span><span class="pas-ident">r</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">var</span>
<span class="pas-space">    </span><span class="pas-ident">i</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">x</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Tmp</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">l</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">r</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">x</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-sym">(</span><span class="pas-ident">l</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">r</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">div</span><span class="pas-space"> </span><span class="pas-num">2</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-kwd">repeat</span>
<span class="pas-space">      </span><span class="pas-kwd">while</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">x</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">        </span><span class="pas-ident">inc</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">while</span><span class="pas-space"> </span><span class="pas-ident">x</span><span class="pas-space">  </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">j</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">do</span><span class="pas-space"> </span>
<span class="pas-space">        </span><span class="pas-ident">dec</span><span class="pas-sym">(</span><span class="pas-ident">j</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">&lt;=</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span>
<span class="pas-space">      </span><span class="pas-kwd">begin</span>
<span class="pas-space">        </span><span class="pas-ident">Tmp</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">j</span><span class="pas-sym">]</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">j</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Tmp</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">inc</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">dec</span><span class="pas-sym">(</span><span class="pas-ident">j</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">until</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">l</span><span class="pas-space"> </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">      </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-ident">l</span><span class="pas-sym">,</span><span class="pas-ident">j</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">r</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">      </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">,</span><span class="pas-ident">r</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">BeginUpdate</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-num">0</span><span class="pas-sym">,</span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">EndUpdate</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-comment">// ==============================================</span>
<span class="pas-comment">// INTERNAL CALL</span>
<span class="pas-comment">// Recursive STRING quick sort routine DECENDING</span>
<span class="pas-comment">// ==============================================</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">.</span><span class="pas-ident">QuickSortStrD</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span>
<span class="pas-space">  </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-ident">l</span><span class="pas-sym">,</span><span class="pas-ident">r</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">var</span><span class="pas-space"> </span>
<span class="pas-space">    </span><span class="pas-ident">i</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">integer</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">x</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Tmp</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">l</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">r</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">x</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-sym">(</span><span class="pas-ident">l</span><span class="pas-space"> </span><span class="pas-sym">+</span><span class="pas-space"> </span><span class="pas-ident">r</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">div</span><span class="pas-space"> </span><span class="pas-num">2</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-kwd">repeat</span>
<span class="pas-space">      </span><span class="pas-kwd">while</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-ident">x</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">        </span><span class="pas-ident">inc</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">while</span><span class="pas-space"> </span><span class="pas-ident">x</span><span class="pas-space">  </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-ident">GetKeyString</span><span class="pas-sym">(</span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">j</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">        </span><span class="pas-ident">dec</span><span class="pas-sym">(</span><span class="pas-ident">j</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">&lt;=</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space">  </span>
<span class="pas-space">      </span><span class="pas-kwd">begin</span>
<span class="pas-space">        </span><span class="pas-ident">Tmp</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">j</span><span class="pas-sym">]</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">j</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">SL</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Tmp</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">inc</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">        </span><span class="pas-ident">dec</span><span class="pas-sym">(</span><span class="pas-ident">j</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">until</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-sym">;</span>

<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">l</span><span class="pas-space"> </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">j</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">      </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-ident">l</span><span class="pas-sym">,</span><span class="pas-ident">j</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-space"> </span><span class="pas-sym">&lt;</span><span class="pas-space"> </span><span class="pas-ident">r</span><span class="pas-space"> </span><span class="pas-kwd">then</span><span class="pas-space"> </span>
<span class="pas-space">      </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">,</span><span class="pas-ident">r</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-space"> </span><span class="pas-sym">&gt;</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">  </span><span class="pas-kwd">begin</span>
<span class="pas-space">    </span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">BeginUpdate</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Sort</span><span class="pas-sym">(</span><span class="pas-num">0</span><span class="pas-sym">,</span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">SL</span><span class="pas-sym">.</span><span class="pas-ident">EndUpdate</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-comment">// ====================</span>
<span class="pas-comment">// Sort a stringlist</span>
<span class="pas-comment">// ====================</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TSuperSort</span><span class="pas-sym">.</span><span class="pas-ident">SortStrings</span><span class="pas-sym">(</span><span class="pas-ident">StringList</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TStrings</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">Switches</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">array</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-kwd">string</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-ident">Options</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TSuperSortOptionSet</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-sym">[</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">StartTime</span><span class="pas-space"> </span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TDateTime</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">StartTime</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Now</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FDescending</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">srtDescending</span><span class="pas-space"> </span><span class="pas-kwd">in</span><span class="pas-space"> </span><span class="pas-ident">Options</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FIgnoreCase</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">srtIgnoreCase</span><span class="pas-space"> </span><span class="pas-kwd">in</span><span class="pas-space"> </span><span class="pas-ident">Options</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FIgnoreBlank</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">srtIgnoreBlank</span><span class="pas-space"> </span><span class="pas-kwd">in</span><span class="pas-space"> </span><span class="pas-ident">Options</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">FEvalNumeric</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-sym">(</span><span class="pas-ident">srtEvalNumeric</span><span class="pas-space"> </span><span class="pas-kwd">in</span><span class="pas-space"> </span><span class="pas-ident">Options</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">ResolveSwitches</span><span class="pas-sym">(</span><span class="pas-ident">Switches</span><span class="pas-sym">)</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">FDescending</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-ident">QuickSortStrD</span><span class="pas-sym">(</span><span class="pas-ident">StringList</span><span class="pas-sym">)</span>
<span class="pas-space">  </span><span class="pas-kwd">else</span>
<span class="pas-space">    </span><span class="pas-ident">QuickSortStrA</span><span class="pas-sym">(</span><span class="pas-ident">StringList</span><span class="pas-sym">)</span><span class="pas-sym">;</span>

<span class="pas-space">  </span><span class="pas-ident">FSortTime</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Now</span><span class="pas-space"> </span><span class="pas-sym">-</span><span class="pas-space"> </span><span class="pas-ident">StartTime</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">end</span><span class="pas-sym">.</span></pre>
</div>