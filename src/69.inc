<p>
  For element in an (X)HTML document is displayed only if its
  <var>display</var> attribute is not &quot;none&quot; <strong>and</strong>
  all of its parent elements are also visible.
</p>

<p>
  The above rules need make me think &quot;recursion&quot; so, I developed the
  following routine to check if a given element in a <var>TWebBrowser</var>
  control is displayed:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">function</span> THTMLDocHelper.ElemIsVisible(<span class="pas-kwd">const</span> Elem: IDispatch): Boolean;
<span class="pas-kwd">var</span>
  Element: IHTMLElement;  <span class="pas-comment">// IHTMLElement interface to Elem</span>
<span class="pas-kwd">begin</span>
  <span class="pas-kwd">if</span> Supports(Elem, IHTMLElement, Element) <span class="pas-kwd">then</span>
  <span class="pas-kwd">begin</span>
    <span class="pas-comment">// Check if element itself is visible</span>
    Result := (Element.style.display &lt;&gt; <span class="pas-str">'none'</span>);
    <span class="pas-kwd">if</span> Result <span class="pas-kwd">and</span> Assigned(Element.parentElement) <span class="pas-kwd">then</span>
      <span class="pas-comment">// Element is visible: check if parent is visible (recursive)</span>
      Result := ElemIsVisible(Element.parentElement);
  <span class="pas-kwd">end</span>
  <span class="pas-kwd">else</span>
    <span class="pas-comment">// Not an HTML element</span>
    Result := False;
<span class="pas-kwd">end</span>;</pre>
</div>

<p>
  To use the function pass the <var>IDispatch</var> interface to the required
  element to it.
</p>