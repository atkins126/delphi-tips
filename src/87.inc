<div class="question">
  <div class="title">
    Question
  </div>
  <div class="content">
    I'm trying to change the font of the first line of a <var>TMemo</var>.
    Is it possible and if so, what functions do I override to accomplish it?
  </div>
</div>

<p>
  It is possible, but I would advise you to use a font that has the same
  height as the original font that is used in the memo (to avoid problems with
  the scollbars). You have to override the <var>WMPaint</var> method (i.e.
  respond to the <var>WM_Paint</var> message). The following example shows an
  owner-drawn memo in which I alternate the colours used to paint the lines,
  but you can modify it to change the font for the first line only, of course:
</p>

<div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">unit</span><span class="pas-space"> </span><span class="pas-ident">Todrmemo</span><span class="pas-sym">;</span>

<span class="pas-kwd">interface</span>

<span class="pas-kwd">uses</span>
<span class="pas-space">  </span><span class="pas-ident">SysUtils</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">WinTypes</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">WinProcs</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Messages</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Classes</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Graphics</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Controls</span><span class="pas-sym">,</span>
<span class="pas-space">  </span><span class="pas-ident">Forms</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Dialogs</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">StdCtrls</span><span class="pas-sym">;</span>

<span class="pas-kwd">type</span>
<span class="pas-space">  </span><span class="pas-ident">TOwnerDrawMemo</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-kwd">class</span><span class="pas-sym">(</span><span class="pas-ident">TMemo</span><span class="pas-sym">)</span>
<span class="pas-space">  </span><span class="pas-kwd">private</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">WMPaint</span><span class="pas-sym">(</span><span class="pas-kwd">var</span><span class="pas-space"> </span><span class="pas-kwd">Message</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TWMPaint</span><span class="pas-sym">)</span><span class="pas-sym">;</span><span class="pas-space"> </span><span class="pas-kwd">message</span><span class="pas-space"> </span><span class="pas-ident">WM_PAINT</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-kwd">Register</span><span class="pas-sym">;</span>

<span class="pas-kwd">implementation</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TOwnerDrawMemo</span><span class="pas-sym">.</span><span class="pas-ident">WMPaint</span><span class="pas-sym">(</span><span class="pas-kwd">var</span><span class="pas-space"> </span><span class="pas-kwd">Message</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TWMPaint</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">Buffer</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-kwd">Array</span><span class="pas-sym">[</span><span class="pas-num">0</span><span class="pas-sym">..</span><span class="pas-num">255</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-kwd">of</span><span class="pas-space"> </span><span class="pas-ident">Char</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">PS</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TPaintStruct</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">DC</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">HDC</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">i</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Integer</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">X</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Y</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Z</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">Word</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">OldColor</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">LongInt</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">DC</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-kwd">Message</span><span class="pas-sym">.</span><span class="pas-ident">DC</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">DC</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">    </span><span class="pas-ident">DC</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">BeginPaint</span><span class="pas-sym">(</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">PS</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">try</span>
<span class="pas-space">    </span><span class="pas-ident">X</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">Y</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">1</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">SetBkColor</span><span class="pas-sym">(</span><span class="pas-ident">DC</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Color</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">SetBkMode</span><span class="pas-sym">(</span><span class="pas-ident">DC</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Transparent</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-ident">OldColor</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Font</span><span class="pas-sym">.</span><span class="pas-ident">Color</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">for</span><span class="pas-space"> </span><span class="pas-ident">i</span><span class="pas-sym">:=</span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">to</span><span class="pas-space"> </span><span class="pas-ident">Pred</span><span class="pas-sym">(</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Count</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">do</span>
<span class="pas-space">    </span><span class="pas-kwd">begin</span>
<span class="pas-space">      </span><span class="pas-comment">{ this is your place to set/reset the font... }</span>
<span class="pas-space">      </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-ident">odd</span><span class="pas-sym">(</span><span class="pas-ident">i</span><span class="pas-sym">)</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">        </span><span class="pas-ident">SetTextColor</span><span class="pas-sym">(</span><span class="pas-ident">DC</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">clRed</span><span class="pas-sym">)</span>
<span class="pas-space">      </span><span class="pas-kwd">else</span>
<span class="pas-space">        </span><span class="pas-ident">SetTextColor</span><span class="pas-sym">(</span><span class="pas-ident">DC</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">OldColor</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">Z</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Length</span><span class="pas-sym">(</span><span class="pas-ident">Lines</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">StrPCopy</span><span class="pas-sym">(</span><span class="pas-ident">Buffer</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Lines</span><span class="pas-sym">[</span><span class="pas-ident">i</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">Buffer</span><span class="pas-sym">[</span><span class="pas-ident">Z</span><span class="pas-sym">]</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-str">#0</span><span class="pas-sym">;</span><span class="pas-space">  </span><span class="pas-comment">{ not really needed }</span>
<span class="pas-space">      </span><span class="pas-ident">TextOut</span><span class="pas-sym">(</span><span class="pas-ident">DC</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">X</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Y</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Buffer</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Z</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">      </span><span class="pas-ident">Inc</span><span class="pas-sym">(</span><span class="pas-ident">Y</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">abs</span><span class="pas-sym">(</span><span class="pas-ident">Font</span><span class="pas-sym">.</span><span class="pas-ident">Height</span><span class="pas-sym">)</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">    </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">finally</span>
<span class="pas-space">    </span><span class="pas-kwd">if</span><span class="pas-space"> </span><span class="pas-kwd">Message</span><span class="pas-sym">.</span><span class="pas-ident">DC</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-num">0</span><span class="pas-space"> </span><span class="pas-kwd">then</span>
<span class="pas-space">      </span><span class="pas-ident">EndPaint</span><span class="pas-sym">(</span><span class="pas-ident">Handle</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">PS</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-kwd">Register</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">RegisterComponents</span><span class="pas-sym">(</span><span class="pas-str">'Samples'</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-sym">[</span><span class="pas-ident">TOwnerDrawMemo</span><span class="pas-sym">]</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">end</span><span class="pas-sym">.</span></pre>
</div>

<div class="js-reveal-block">
  <p>
    <a
      id='demo-link'
      class='show-hide-link'
      href="javascript:void(0)"
      onclick="showDemo('demo-link', 'demo-code');"
    >Show demo code</a>
  </p>
  <div id="demo-code" class="demo-block">
    <p class="reporef">
      A ready made project containing this demo code is available.
      <?php
      echo DocPart::OffsiteTextLink(
        URL_VIEWREPO . '/tip-087',  'View the project'
      );
      ?>.
    </p>
    <p>
      This demo uses the owner draw memo presented above and creates it
      dynamically, to save having to install the component. We display
      four lines of text to demonstrate the component. Proceed as follows:
    </p>
    <ul>
      <li>
        Start a new Delphi VCL application.
      </li>
      <li>
        Create a copy of the <var>Todrmemo</var> unit presented
        above, save it as <code>Todrmemo.pas</code> and add it to
        the project.
      </li>
      <li>
        Name the project's main form &quot;Form1&quot; and create an
        <var>OnCreate</var> event handler for <var>TForm1</var>.
        Save the form unit as <code>Unit1.pas</code>.
      </li>
      <li>
        Code <code>Unit1.pas</code> as follows:
      </li>
    </ul>
    <div class="frame">
<!-- Highlighted Pascal code generated by DelphiDabbler PasH -->
<pre class="pas-source"><span class="pas-kwd">unit</span><span class="pas-space"> </span><span class="pas-ident">Unit1</span><span class="pas-sym">;</span>

<span class="pas-kwd">interface</span>

<span class="pas-kwd">uses</span>
<span class="pas-space">  </span><span class="pas-ident">Forms</span><span class="pas-sym">,</span><span class="pas-space"> </span><span class="pas-ident">Todrmemo</span><span class="pas-sym">;</span>

<span class="pas-kwd">type</span>
<span class="pas-space">  </span><span class="pas-ident">TForm1</span><span class="pas-space"> </span><span class="pas-sym">=</span><span class="pas-space"> </span><span class="pas-kwd">class</span><span class="pas-sym">(</span><span class="pas-ident">TForm</span><span class="pas-sym">)</span>
<span class="pas-space">    </span><span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">FormCreate</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">private</span>
<span class="pas-space">    </span><span class="pas-ident">fODM</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TOwnerDrawMemo</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">var</span>
<span class="pas-space">  </span><span class="pas-ident">Form1</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TForm1</span><span class="pas-sym">;</span>

<span class="pas-kwd">implementation</span>

<span class="pas-preproc">{$R *.dfm}</span>

<span class="pas-comment">{ TForm1 }</span>

<span class="pas-kwd">procedure</span><span class="pas-space"> </span><span class="pas-ident">TForm1</span><span class="pas-sym">.</span><span class="pas-ident">FormCreate</span><span class="pas-sym">(</span><span class="pas-ident">Sender</span><span class="pas-sym">:</span><span class="pas-space"> </span><span class="pas-ident">TObject</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-kwd">begin</span>
<span class="pas-space">  </span><span class="pas-ident">fODM</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">TOwnerDrawMemo</span><span class="pas-sym">.</span><span class="pas-ident">Create</span><span class="pas-sym">(</span><span class="pas-ident">Self</span><span class="pas-sym">)</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">fODM</span><span class="pas-sym">.</span><span class="pas-ident">Parent</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-ident">Self</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">fODM</span><span class="pas-sym">.</span><span class="pas-ident">Top</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">20</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">fODM</span><span class="pas-sym">.</span><span class="pas-ident">Left</span><span class="pas-space"> </span><span class="pas-sym">:=</span><span class="pas-space"> </span><span class="pas-num">20</span><span class="pas-sym">;</span>
<span class="pas-space">  </span><span class="pas-ident">fODM</span><span class="pas-sym">.</span><span class="pas-ident">Lines</span><span class="pas-sym">.</span><span class="pas-ident">Text</span><span class="pas-space"> </span><span class="pas-sym">:=</span>
<span class="pas-space">    </span><span class="pas-str">'Line 1'</span><span class="pas-str">#13</span><span class="pas-str">#10</span><span class="pas-str">'Line 2'</span><span class="pas-str">#13</span><span class="pas-str">#10</span><span class="pas-str">'Line 3'</span><span class="pas-str">#13</span><span class="pas-str">#10</span><span class="pas-str">'Line 4'</span><span class="pas-sym">;</span>
<span class="pas-kwd">end</span><span class="pas-sym">;</span>

<span class="pas-kwd">end</span><span class="pas-sym">.</span></pre>
    </div>
    <p>
      When you run the program you will see the memo with alternating red
      and grey font colours. Do note though that if you select any text
      the control will become a mess &ndash the coloured fonts will be
      lost.
    </p>
    <p class="credits">
      Demo by Peter Johnson
    </p>
  </div>
</div>
